/**
 *
 * Dependencies installation
 *
 * npm install superagent bugswarm-prt
 *
 * More info about Superagent API can be found at:
 * http://visionmedia.github.com/superagent/
 *
 *
 * This example pulls the Facebook Graph API every second
 * in order to notify to a swarm upon FBLikes increments.
 *
 * For developers not familiar with node.js and its
 * event driven nature, there are
 * some numeric marks (//1, //2, //3, //4, etc),
 * that represent the flow of execution of this example.
 */


process.env.NODE_ENV = 'production';

var request         = require('superagent');
var Swarm           = require('bugswarm-prt').Swarm;

var API_KEY         ="e08cb49ed711ace2ec273f21495823485c116733"; //"YOUR API KEY";
var SWARM_ID        ="f9a6f0837d8792aff157acc4a65bfaf008e04b06"; //"YOUR SWARM ID";
var RESOURCE_ID     ="2cb49888517ec2b889fdceb23ede3fa6210ff6e8"; //"YOUR RESOURCE ID";

var options = {
    apikey: API_KEY,
    resource: RESOURCE_ID,
    swarms: [SWARM_ID]
};

var likecount = 0;
var interval = null;
var producer = new Swarm(options);

producer.on('connect', function() {
    //2
    console.log('Connected to swarm!');
    console.log('Starting facebook poller...');

    if (interval) {
        clearInterval(interval);
    }

    interval = setInterval(fbpoller, 1000);
});

//P:e08cb49ed711ace2ec273f21495823485c116733
//C:bb044455058d0e0d4499f987fb4f99f987d52a87

function fbpoller() {
    console.log("inside polar");
    request
    //.Request('GET','http://api.bugswarm.com/resources/65d4bc9279521ba502b7707e5e05d98a3cd8d339')
        .get('http://api.bugswarm.com/resources/65d4bc9279521ba502b7707e5e05d98a3cd8d339')
        //.set('Accept', 'application/json')
       // .setHeaderProperties({"x-bugswarmapikey": "99fd7bacbde825fb338ef18dafefa53c6693577a"})
       .set({"x-bugswarmapikey": "bb044455058d0e0d4499f987fb4f99f987d52a87"})
       //.post('http://api.bugswarm.net/resources/928bab7c0822347c8f25a3efc68426bcc62f777a',{"x-bugswarmapikey": "99fd7bacbde825fb338ef18dafefa53c6693577a"})
        //.set('Accept', 'application/json') 
       .end(function(res) {
            //4
    	 
            var data = res.body;
            console.log("===="+res);
            var output = '';
            for (property in res) {
              output += property + ': ' + res[property]+'; ';
            }
            console.log("Output is     "+output);
          
            console.log("data   "+data);
            
        });
}

producer.on('disconnect', function() {
    console.log("disconnected from swarm?!");
    console.log('exiting...');
    process.exit();
});

producer.on('presence', function(p) {
    //console.log(p);
});

producer.on('error', function(error) {
    console.log(error);
});

//1. execution flow starts here
producer.connect();

//Disconnects smoothly from Swarm server upon program termination
['SIGINT', 'SIGTERM'].forEach(function(signal){
    process.on(signal, function(){
        producer.disconnect();
    });
});